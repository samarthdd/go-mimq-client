version: "3.3"
   
services:
  go-k8s-process:
    container_name: go-k8s-process
    image: go-k8s-process
    environment:
      - ADAPTATION_REQUEST_QUEUE_HOSTNAME=mq
      - ADAPTATION_REQUEST_QUEUE_PORT=5672
      - MESSAGE_BROKER_USER="<rabbitmq-user>"
      - MESSAGE_BROKER_PASSWORD="<rabbitmq-password>"
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY="<minio-user>"
      - MINIO_SECRET_KEY="<minio-password>"
      - MINIO_SOURCE_BUCKET="<bucket-name>"
      - MINIO_CLEAN_BUCKET="<bucket-name>"
    command:
      - '/bin/sh'
      - '-c'
      - '/bin/sleep 30 && /bin/go-k8s-process'
    depends_on:
      - "mq"
      - "minio"
    restart: always

    networks:
      - k8flow

  go-k8s-srv1:
    container_name: go-k8s-srv1
    image: go-k8s-srv1
    environment:
      - ADAPTATION_REQUEST_QUEUE_HOSTNAME=mq
      - ADAPTATION_REQUEST_QUEUE_PORT=5672
      - MESSAGE_BROKER_USER="<rabbitmq-user>"
      - MESSAGE_BROKER_PASSWORD="<rabbitmq-password>"
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY="<minio-user>"
      - MINIO_SECRET_KEY="<minio-password>"
      - MINIO_SOURCE_BUCKET="<bucket-name>"
    command:
      - '/bin/sh'
      - '-c'
      - '/bin/sleep 30 && /bin/icap-service1'
    volumes:
      - '/path/to/dir:/tmp'
    depends_on:
      - "mq"
      - "minio"
    restart: always

    networks:
      - k8flow
  go-k8s-srv2:
    container_name: go-k8s-srv2
    image: go-k8s-srv2
    environment:
      - ADAPTATION_REQUEST_QUEUE_HOSTNAME=mq
      - ADAPTATION_REQUEST_QUEUE_PORT=5672
      - MESSAGE_BROKER_USER="<rabbitmq-user>"
      - MESSAGE_BROKER_PASSWORD="<rabbitmq-password>"
    command:
      - '/bin/sh'
      - '-c'
      - '/bin/sleep 30 && /bin/icap-service2'
    volumes:
      - '/path/to/dir:/tmp'
    depends_on:
      - "mq"
      - "minio"
    restart: always

    networks:
      - k8flow
  mq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: "<minio-user>"
      RABBITMQ_DEFAULT_PASS: "<rabbitmq-password>"
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - k8flow
  minio:
    container_name: minio
    image: minio/minio
    ports:
      - '9000:9000'
    environment:
      MINIO_ROOT_USER: "<minio-user>"
      MINIO_ROOT_PASSWORD: "<minio-password>"
    command: server /data
    volumes:
      - 'minio_data:/data'
    networks:
      - k8flow
networks:
  k8flow:
    driver: bridge

volumes:
  minio_data:
    driver: local
